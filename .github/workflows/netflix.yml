name: Build,Analyze,scan

on:
  push:
    branches:
      - main


jobs:
  build-analyze-scan:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: Node.js 20:actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
     
      - name: Build and analyze with sonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: install trivy 
        run: |
            #install trivy
            sudo apt-get install wget apt-transport-https gnupg lsb-release -y
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
            echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy -y
            #command to scan files
            trivy fs .

      - name: Docker build and push 
        run: |
          #run commands to build and push docker images
          docker build --build-arg TMDB_V3_API_KEY=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4OWY5YjVmNzhkNjlmY2Q1NmM0NTU2OTg5YzBiNTk2YyIsInN1YiI6IjY2MWQxYWYwZWMwYzU4MDEzMDczYTg1MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DaNv3a5pcSRlM1OtfSzg0w2Ho6cqmMexXrRSRWrLfXk -t netflix .
          docker tag netflix sehindemitech/netflix:latest 
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} 
          docker push sehindemitech/netflix:latest
        env:
          DOCKER_CLI_ACI: 1
  
  deploy:
    needs: build-analyze-scan
    runs-on: [aws-netflix]
    steps:
      - name: pull the docker image 
        run: docker pull sehindemitech/netflix:latest
      - name: Trivy image scan
        run: trivy image sehindemitech/netflix:latest
      - name: run the container netflix
        run: docker run -d --name netflix -p 8081:80 sehindemitech/netflix:latest







